########################################################################################################################
# Project specific settings
########################################################################################################################

[buildout]
find-links=${settings:find-links}
# extra directories to add to the python path
extra-paths+=
# better have mr.developer mananing your eggs, see sources.cfg
develop=    

eggs=    


[sources]
# see http://pypi.python.org/pypi/mr.developer for documentation
# better to edit ./sources.cfg

[scripts]
recipe=minitage.recipe.scripts
# attacking zopepy:eggs make instance be built after zopepy
# in any case thx to the buildout automatic parts sort.
extra-paths+=${buildout:extra-paths}
eggs += ${buildout:eggs}
    mobyle2.core
    z3c.checkversions
    nose
    
#Pyramid
    pyramid
    repoze.tm2
    cryptacular
    PasteDeploy
    Paste
    WebOb
    WebError
    repoze.vhm
    CherryPy
    gunicorn
    sqlalchemy
    psycopg2
    egenix-mx-base
#with_pyramid_extdirect
    pyramid_extdirect
#with_database_postgresql
#with_database_sa
#with_tool_coverage
    coverage
#with_binding_pil
    PIL
#with_pyramid_who
    pyramid_who
#with_binding_json
    demjson
    simplejson
#with_binding_lxml
    lxml
    elementtree
#with_egg_pylint
    pylint
#with_tool_ipython
    ipython
#with_pyramid_debugtoolbar
    pyramid_debugtoolbar
#with_binding_ldap
    python-ldap
#with_tool_bpython
    bpython
#with_pyramid_zcml
    pyramid_zcml
#with_tool_nose
    nose
#with_pyramid_xmlrpc
    pyramid_xmlrpc
#schema migrations
    sqlalchemy-migrate
# Scripts generated filtering
scripts+=
#z3c.checkversions
    checkversions
#zope2
    paster    
#with_tool_bpython
    bpython
#with_tool_nose
    nosetests
    nose
#with_tool_ipython
    ipython
#with_egg_pylint
    pylint
    gunicorn_paster
    pybabel
    pylint-gui
    nosetests
#schema migrations
    migrate
    migrate-repository
interpreter = pyramidpy
env-file=${buildout:directory}/etc/mobyle2.env

dependent-scripts=true
#paster-initialization=

[test]
recipe = zc.recipe.testrunner
eggs = ${scripts:eggs}
script = selftest

[omelette]
order=${scripts:recipe}
recipe = collective.recipe.omelette
eggs = ${scripts:eggs}
packages =${scripts:extra-paths}

# zope.testing testrunner support
[testenv]

# This testrunner is a zc.recipe.testrunner like
# See http://pypi.python.org/pypi/zc.recipe.testrunner/
# It can do xml reports addon if you supply -x as a command line argument
# It is useful for generating reports for hudson or other contineous integration
[mobyle2.test]
recipe = collective.xmltestreport
eggs = ${scripts:eggs}
extra-paths = ${scripts:extra-paths}
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']
environment = testenv

[instance]
recipe = collective.recipe.template
# set here your project application wsgi application
egg=${settings:application}
ep=${instance:egg}
input =  ${buildout:directory}/etc/templates/wsgi/paster.ini.in
output = ${buildout:directory}/etc/wsgi/instance.ini
host=${hosts:instance}
port=${ports:instance}
intercept_exc_debug=debug
debugtoolbar.eval_exc=true
debug=true
# points to egg/jinja2 directory
jinja2_templates=${instance:egg}:jinja2
commit_veto = pyramid_tm.default_commit_veto
# scheme type can be zeo | file
# see https://docs.pylonsproject.org/projects/pyramid_zodbconn/dev/
zodb = zeo://${hosts:zeo}:${ports:zeo}
http=egg:Paste#http

[velruse]
<=instance
input =  ${buildout:directory}/etc/templates/wsgi/auth.yaml.in
output = ${buildout:directory}/etc/wsgi/auth.yaml

# vim:set ft=cfg:
